---
name: gitflow-build-and-deploy

on:
  push:
    branches:
      - develop
      - 'hotfix/**'
      - 'feature/**'

jobs:
  sit-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: build
      run: echo "Build has been completed"
    - name: deployment
      run: echo "Deployment has been completed"

  create-release:
    runs-on: ubuntu-latest
    needs: sit-build-and-deploy
    if: startsWith(github.ref, 'refs/heads/develop')  || startsWith(github.ref, 'refs/heads/feature/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Release create
        run: |
          increment_version() {
            local RELEASE_ORDER="$1"
            local VERSION="$2"
            local SEGMENT="$3"

            IFS='.' read -r -a parts <<< "$VERSION"
            if [ "$SEGMENT" == "middle" ]; then
                ((parts[1]++))
            elif [ "$SEGMENT" == "last" ]; then
                ((parts[2]++))
            else
                echo "Invalid SEGMENT. Please use 'middle' or 'last'."
                exit 1
            fi

            NEW_VERSION="${RELEASE_ORDER}.${parts[1]}.${parts[2]}"
            echo "${NEW_VERSION}"
          }

          BRANCH_NAME=$(echo "${GITHUB_REF}" | awk -F'/' '{print $NF}')
          echo "BRANCH NAME is: ${BRANCH_NAME}"

          if [[ "${BRANCH_NAME}" == "develop" ]]; then
              VERSION_INCREMENT="middle"
          else
              VERSION_INCREMENT="last"
          fi

          RELEASE_VERSION=$(increment_version "${RELEASE_ORDER}" "${LAST_RELEASE_BRANCH_NAME}" "${VERSION_INCREMENT}")
          echo "NEW RELEASE VERSION is: ${RELEASE_VERSION}"
        env:
          RELEASE_ORDER: 1
          LAST_RELEASE_BRANCH_NAME: 1.0.0

  uat-build-and-deploy:
    runs-on: ubuntu-latest
    needs: sit-build-and-deploy
    if: startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: build
      run: echo "user-acceptance-testing Build has been completed"
    - name: deployment
      run: echo "user-acceptance-testing deployment has been completed"

  prd-build-and-deploy:
    runs-on: ubuntu-latest
    needs: uat-build-and-deploy
    if: startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: build
      run: echo "production build has been completed"
    - name: deployment
      run: echo "Production deployment has been completed"